blueprint:
  name: EV Charging Notification (Full Auto, Mobile Push, TTS, Dynamic Icons)
  description: >
    Send automatic EV charging notifications.
    - Mobile push notifications
    - Optional TTS announcements
    - Dynamic icons ⚡ ✅
    - Miles / KM toggle
    - Auto-clear on unplug
  domain: automation
  input:
    charger_connection_status:
      name: Charger Connection Status Sensor
      description: Select the sensor showing whether the charger is connected.
      selector:
        entity:
          domain: sensor
    charging_power:
      name: Charging Power Sensor (Watts)
      description: Select the sensor showing current charging power in Watts.
      selector:
        entity:
          domain: sensor
    battery_level:
      name: Battery Charge Level Sensor (%)
      description: Select the sensor showing current battery percentage.
      selector:
        entity:
          domain: sensor
    estimated_finish_time:
      name: Estimated Finish Time Sensor
      description: Select the sensor showing estimated fully charged time.
      selector:
        entity:
          domain: sensor
    range_km:
      name: Estimated Range Sensor (Kilometers)
      description: Select the sensor showing estimated driving range.
      selector:
        entity:
          domain: sensor
    notify_devices:
      name: Devices to Notify (Mobile)
      description: Select mobile devices to receive push notifications (via mobile_app).
      default: []
      selector:
        device:
          filter:
            - integration: mobile_app
          multiple: true
    tts_media_players:
      name: TTS Speakers (Optional)
      description: Select media players for TTS announcements (optional).
      default: []
      selector:
        entity:
          domain: media_player
          multiple: true
    range_units:
      name: Preferred Distance Units
      description: Miles or Kilometers for Range display.
      default: miles
      selector:
        select:
          options:
            - miles
            - kilometers

trigger:
  - platform: state
    entity_id:
      - !input charger_connection_status
      - !input charging_power
      - !input battery_level
      - !input estimated_finish_time
      - !input range_km
    for:
      seconds: 30
  - platform: time_pattern
    minutes: "/2"

variables:
  charging_power_kw: >
    {% set power = states(inputs.charging_power) | float(0) %}
    {{ (power / 1000) | round(1) }}
  battery_percent: >
    {{ states(inputs.battery_level) | float(0) | round(0) }}
  estimated_finish: >
    {{ states(inputs.estimated_finish_time) }}
  range_km_value: >
    {{ states(inputs.range_km) | float(0) }}
  range_value: >
    {% if inputs.range_units == 'miles' %}
      {{ (range_km_value * 0.621371) | round(0) }}
    {% else %}
      {{ range_km_value | round(0) }}
    {% endif %}
  range_unit_label: >
    {% if inputs.range_units == 'miles' %}
      miles
    {% else %}
      km
    {% endif %}
  notify_services: >
    {{ expand(inputs.notify_devices) | map(attribute='entity_id') | select('search', '^notify\.') | list }}
  is_charging: >
    {{ states(inputs.charger_connection_status) == "Connected" and states(inputs.charging_power) | float(0) > 100 }}

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ is_charging }}"
        sequence:
          - parallel:
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ notify_services | length > 0 }}"
                    sequence:
                      - repeat:
                          for_each: "{{ notify_services }}"
                          sequence:
                            - service: "{{ repeat.item }}"
                              data:
                                title: >
                                  ⚡ Charging: {{ charging_power_kw }}kW at {{ battery_percent }}%
                                message: >
                                  Estimated to finish at {{ estimated_finish }}
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ inputs.tts_media_players | length > 0 }}"
                    sequence:
                      - service: tts.google_translate_say
                        data:
                          entity_id: "{{ inputs.tts_media_players }}"
                          message: >
                            Charging started. Battery at {{ battery_percent }} percent. Estimated finish at {{ estimated_finish }}.
                          cache: false
              - service: persistent_notification.create
                data:
                  title: >
                    ⚡ Charging: {{ charging_power_kw }}kW at {{ battery_percent }}%
                  message: >
                    Estimated to finish at {{ estimated_finish }}
                  notification_id: car_charging_status
      - conditions:
          - condition: template
            value_template: "{{ states(inputs.charger_connection_status) == 'Connected' and states(inputs.charging_power) | float(0) <= 100 }}"
        sequence:
          - parallel:
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ notify_services | length > 0 }}"
                    sequence:
                      - repeat:
                          for_each: "{{ notify_services }}"
                          sequence:
                            - service: "{{ repeat.item }}"
                              data:
                                title: >
                                  ✅ Fully Charged: {{ battery_percent }}%
                                message: >
                                  Estimated available range: {{ range_value }} {{ range_unit_label }}
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ inputs.tts_media_players | length > 0 }}"
                    sequence:
                      - service: tts.google_translate_say
                        data:
                          entity_id: "{{ inputs.tts_media_players }}"
                          message: >
                            Charging complete. Battery at {{ battery_percent }} percent. Estimated range is {{ range_value }} {{ range_unit_label }}.
                          cache: false
              - service: persistent_notification.create
                data:
                  title: >
                    ✅ Fully Charged: {{ battery_percent }}%
                  message: >
                    Estimated available range: {{ range_value }} {{ range_unit_label }}
                  notification_id: car_charging_status
      - conditions:
          - condition: template
            value_template: "{{ states(inputs.charger_connection_status) != 'Connected' }}"
        sequence:
          - service: persistent_notification.dismiss
            data:
              notification_id: car_charging_status

mode: single
